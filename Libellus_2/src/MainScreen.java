/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.*;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.jcraft.jsch.*;
import java.util.Properties;
/**
 *
 * @author ravi
 */
public class MainScreen extends javax.swing.JFrame {
    File varSendFile;
    File selectedFile;
    String[][] compSystems;
    /**
     * Creates new form MainScreen
     */
    public MainScreen() {
        initComponents();
        this.compSystems = null;
        try
        {
          this.varSendFile = new File("sendFile.txt");
          if (!this.varSendFile.exists()) {
            boolean bool = this.varSendFile.createNewFile();
       
          }
          //System.out.println(varSendFile.getAbsolutePath());
        }
        catch (IOException ex)
        {
          Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jSeparator6 = new javax.swing.JSeparator();
        fileChooser = new javax.swing.JFileChooser();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        month = new javax.swing.JComboBox<>();
        weekday = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jobText = new javax.swing.JTextArea();
        addJob = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        rbRoot = new javax.swing.JRadioButton();
        rbUser = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        min = new javax.swing.JComboBox<>();
        hrs = new javax.swing.JComboBox<>();
        day = new javax.swing.JComboBox<>();
        mainInfo = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        commandText = new javax.swing.JTextArea();
        jLabel19 = new javax.swing.JLabel();
        rbRoot1 = new javax.swing.JRadioButton();
        rbUser1 = new javax.swing.JRadioButton();
        execute = new javax.swing.JButton();
        execInfo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        result1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        importFile = new javax.swing.JButton();
        chooseFile = new javax.swing.JButton();
        selectedFilePath = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        buttonGroup.add(rbRoot);
        buttonGroup.add(rbUser);

        fileChooser.setDialogTitle("Choose CSV file");

        buttonGroup1.add(rbRoot1);
        buttonGroup1.add(rbUser1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel7.setText("Add Job");

        month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        weekday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));

        jLabel10.setText("Min(MM)");

        jLabel11.setText("Hrs(HH)");

        jLabel12.setText("Day");

        jLabel13.setText("Month");

        jLabel14.setText("Weekday ");

        jobText.setColumns(20);
        jobText.setRows(3);
        jScrollPane1.setViewportView(jobText);

        addJob.setText("Add");
        addJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJobActionPerformed(evt);
            }
        });

        jLabel15.setText("Write Your Job (1 Command/request)");

        rbRoot.setText("Root");

        rbUser.setText("User");

        jLabel16.setText("Select User :");

        min.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*", "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        hrs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*", "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        day.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        mainInfo.setText("Please remeber to select file in Configure window");

        result.setColumns(20);
        result.setRows(5);
        jScrollPane4.setViewportView(result);

        jLabel3.setText("Result:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel16)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(rbRoot)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rbUser)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addJob, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel7)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(12, 12, 12)
                                            .addComponent(jLabel10))
                                        .addComponent(min, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel11)
                                        .addComponent(hrs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(12, 12, 12)
                                            .addComponent(jLabel12)))
                                    .addGap(9, 9, 9)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel13))
                                    .addGap(13, 13, 13)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(weekday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(27, 27, 27)
                                            .addComponent(jLabel14))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addComponent(jLabel15))
                                .addComponent(jScrollPane1))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mainInfo)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hrs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weekday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(rbRoot)
                    .addComponent(rbUser)
                    .addComponent(addJob))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Main", jPanel1);

        jLabel8.setText("Execute Command");

        commandText.setColumns(20);
        commandText.setRows(4);
        jScrollPane2.setViewportView(commandText);

        jLabel19.setText("Select User :");

        rbRoot1.setText("Root");

        rbUser1.setText("User");

        execute.setText("Execute");
        execute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeActionPerformed(evt);
            }
        });

        execInfo.setText("Please remeber to select file in Configure window");

        jLabel2.setText("Execute one command at a time");

        result1.setColumns(20);
        result1.setRows(5);
        jScrollPane3.setViewportView(result1);

        jLabel1.setText("Result:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(rbRoot1)
                        .addGap(18, 18, 18)
                        .addComponent(rbUser1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(execute, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(execInfo)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(rbRoot1)
                    .addComponent(rbUser1)
                    .addComponent(execute))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(execInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Execute", jPanel4);

        jLabel20.setText("Add System (CSV file)");

        importFile.setText("Import");
        importFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importFileActionPerformed(evt);
            }
        });

        chooseFile.setText("Choose file");
        chooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileActionPerformed(evt);
            }
        });

        jLabel6.setText("Note: Data should start from row 1in CSV file. ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(155, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel20)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(chooseFile)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selectedFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(importFile, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chooseFile))
                    .addComponent(selectedFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(importFile))
                .addGap(51, 51, 51)
                .addComponent(jLabel6)
                .addContainerGap(237, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Configure", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 422, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 399, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("About", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private String returnNum(String weekday){
        if (weekday == "Sunday") {
            return "0";
          }
        else  if (weekday == "Monday") {
            return "1";
          }
        else  if (weekday == "Tuesday") {
            return "2";
          }
        else  if (weekday == "Wednesday") {
            return "3";
          }
        else if (weekday == "Thrusday") {
            return "4";
          }
        else  if (weekday == "Friday") {
            return "5";
          }
        else  if (weekday == "Saturday") {
            return "6";
          }
          return "*";
    }
    private void addJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJobActionPerformed
       if (this.compSystems != null)
        {
          String selectedMin = (String)this.min.getSelectedItem();
          String selectedHrs = (String)this.hrs.getSelectedItem();
          String selectedDay = (String)this.day.getSelectedItem();
          String selectedMonth = (String)this.month.getSelectedItem();
          String selectedWeekday = (String)this.weekday.getSelectedItem();
          String command = this.jobText.getText();

          String jobEntry = selectedMin + " " + selectedHrs + " " + selectedDay + " " + selectedMonth + " " + returnNum(selectedWeekday) + " " + command + "\n";
          String[] commands = new String[5];
          if (this.rbRoot.isSelected())
          {
            commands[0] = "sudo -S -p '' crontab -l > originalFile";
            commands[1] = "sudo -S -p '' cat sendFile.txt >> originalFile";
            commands[2] = "sudo -S -p '' crontab originalFile";
          }
          else if (this.rbUser.isSelected())
          {
            commands[0] = "crontab -l > originalFile";
            commands[1] = "cat sendFile.txt >> originalFile";
            commands[2] = "crontab originalFile";
          }
          commands[3] = "rm originalFile";
          commands[4] = "rm sendFile.txt";

          JSch js = new JSch();
          int num_rows = 0,check=0;
          try
          {
            FileWriter fileWriter = new FileWriter(this.varSendFile.getName());
            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
            bufferedWriter.write(jobEntry);
            bufferedWriter.close();
            check=1;
          }
          catch (IOException ex)
          {
            Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
          }
          
          while (this.compSystems[num_rows] != null && check==1)
            {
                try{
                        String hostAddr = this.compSystems[num_rows][0] + "@" + this.compSystems[num_rows][1];
                        String send = "sshpass -p "+compSystems[num_rows][2]+" scp "+ varSendFile.getAbsolutePath()+" " + hostAddr + ":/home/" + this.compSystems[num_rows][0];
                        System.out.println(send);
                        Runtime.getRuntime().exec(send);
                        for (int i = 0; i < 5; i++)
                        {
                          Session s = js.getSession(this.compSystems[num_rows][0], this.compSystems[num_rows][1], 22);
                          s.setPassword(this.compSystems[num_rows][2]);
                          Properties config = new Properties();

                          config.put("StrictHostKeyChecking", "no");
                          s.setConfig(config);
                          s.connect();

                          Channel c = s.openChannel("exec");
                          ChannelExec ce = (ChannelExec)c;

                          ce.setCommand(commands[i]);
                          ce.setErrStream(System.err);

                          ce.connect();
                          if (this.rbRoot.isSelected())
                          {
                            OutputStream out = c.getOutputStream();
                            out.write((this.compSystems[num_rows][2] + "\n").getBytes());
                            out.flush();
                          }
                          ce.disconnect();
                          s.disconnect();
                        }
                        result.append(compSystems[num_rows][0]+"@"+compSystems[num_rows][1]+" : Command Executed.\n");
                  }
                  catch (IOException|JSchException ex)
                  {
                    Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
                    result1.append(compSystems[num_rows][0]+"@"+compSystems[num_rows][1]+" : Incorrect system details.\n");
                  }
                
                num_rows++;
          }
          //this.mainInfo.setText("Job added successfully!");
        }
        else
        {
          result.setText("You have not selected any file. \nPlease visit Configure window.");
        }
    }//GEN-LAST:event_addJobActionPerformed

    private void chooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileActionPerformed
        int result = this.fileChooser.showOpenDialog(this);
        if (result == 0)
        {
          this.selectedFile = this.fileChooser.getSelectedFile();
          this.selectedFilePath.setText(this.selectedFile.getAbsolutePath());
        }
    }//GEN-LAST:event_chooseFileActionPerformed

    private void importFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importFileActionPerformed
        if (this.selectedFile != null)
        {
          try
          {
            FileReader fr = new FileReader(this.selectedFile.getAbsolutePath());
            BufferedReader br = new BufferedReader(fr);
            String line = "";
            int count = 0;
            while ((line = br.readLine()) != null) {
              count++;
            }
            this.compSystems = new String[count][3];

            fr = new FileReader(this.selectedFile.getAbsolutePath());
            br = new BufferedReader(fr);
            line = "";
            count = 0;
            while ((line = br.readLine()) != null)
            {
              this.compSystems[count] = line.split(",");
              System.out.println(compSystems[count][0]+" "+compSystems[count][1]+" "+compSystems[count][2]);
              count++;
              
            }
          }
          catch (IOException ex)
          {
            Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
          }
          this.mainInfo.setText("File has been selected.");
          this.execInfo.setText("File has been selected.");
          this.selectedFilePath.setText("Imported!");
        }
        else
        {
          this.selectedFilePath.setText("Please choose csv file");
        }
    }//GEN-LAST:event_importFileActionPerformed

    private void executeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeActionPerformed
        if (this.compSystems != null)
        {
            JSch js = new JSch();
            int num_rows = 0;
            result1.setText("");
            String commands = this.commandText.getText();
            if ((commands != null) || (commands != "")) 
            {
              while (this.compSystems[num_rows] != null)
              {
                try
                {
                    String hostAddr = this.compSystems[num_rows][0] + "@" + this.compSystems[num_rows][1];
                    Session s = js.getSession(this.compSystems[num_rows][0], this.compSystems[num_rows][1], 22);
                    s.setPassword(this.compSystems[num_rows][2]);
                    Properties config = new Properties();
                    config.put("StrictHostKeyChecking", "no");
                    s.setConfig(config);
                    s.connect();
                    Channel c = s.openChannel("exec");
                    ChannelExec ce = (ChannelExec)c;
                    if (this.rbRoot1.isSelected()) {
                      commands = "sudo -S -p '' " + commands+">> libellus.log" ;
                    }
                    ce.setCommand(commands);
                    ce.setErrStream(System.err);

                    ce.connect();
                    if (this.rbRoot1.isSelected())
                    {
                      OutputStream out = c.getOutputStream();
                      out.write((this.compSystems[num_rows][2] + "\n").getBytes());
                      out.flush();
                    }
                    ce.disconnect();
                    s.disconnect();
                    
                    result1.append(compSystems[num_rows][0]+"@"+compSystems[num_rows][1]+" : Command Executed.\n");
                    //System.out.println(compSystems[num_rows][0]+"@"+compSystems[num_rows][1]+": Success");
                }
                catch (IOException|JSchException ex)
                {
                    Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
                    
                    result1.append(compSystems[num_rows][0]+"@"+compSystems[num_rows][1]+" : Incorrect system details.\n");
                    //System.out.println(compSystems[num_rows][0]+"@"+compSystems[num_rows][1]+": Error");
                }
                num_rows++;
            }
          }
          //this.execInfo.setText("Command executed successfully!");
        }
        else
        {
          result1.setText("You have not selected any file. \nPlease visit Configure window.");
        }
    }//GEN-LAST:event_executeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJob;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton chooseFile;
    private javax.swing.JTextArea commandText;
    private javax.swing.JComboBox<String> day;
    private javax.swing.JLabel execInfo;
    private javax.swing.JButton execute;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JComboBox<String> hrs;
    private javax.swing.JButton importFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jobText;
    private javax.swing.JLabel mainInfo;
    private javax.swing.JComboBox<String> min;
    private javax.swing.JComboBox<String> month;
    private javax.swing.JRadioButton rbRoot;
    private javax.swing.JRadioButton rbRoot1;
    private javax.swing.JRadioButton rbUser;
    private javax.swing.JRadioButton rbUser1;
    private javax.swing.JTextArea result;
    private javax.swing.JTextArea result1;
    private javax.swing.JLabel selectedFilePath;
    private javax.swing.JComboBox<String> weekday;
    // End of variables declaration//GEN-END:variables
}
